# C++标准mke文件
#--------------------------------------------------------------------------------------
#
#
# $Copyright: (c) 2017 PDIWT Systems, Incorporated. All rights reserved. $
#
#--------------------------------------------------------------------------------------

#----------------------------------------------------------------------
# Variable Defination
#----------------------------------------------------------------------
appName = PDIWT_Waterway_Lock_UnitTest
#MS = C:/PROGRA~1/Bentley/MICROS~1/MICROS~1/

%warn MS=$(MS)
%warn MSMDE=$(MSMDE)
%warn MSMDE_OUTPUT=$(MSMDE_OUTPUT)
baseDir = $(_MakeFilePath)
includeDir = $(baseDir)
sourceDir = $(baseDir)
langSpec = $(baseDir)chinese/
mdlapps = $(MS)Mdlapps/
mainSourceDir = D:/Programma/Source/C++/PDWIT_Waterway/PDIWT_Waterway_Lock/

nameToDefine = __$(appName)_BUILD__
%include $(mdlMki)cdefapnd.mki
PolicyFile = MicroStationPolicy.mki
DEFAULT_TARGET_PROCESSOR_ARCHITECTURE=x64
mdlMki = $(MSMDE)mki/
mdlLibs = $(MSMDE)library/
mdlInc = $(MSMDE)include/

%include $(mdlMki)mdl.mki
o = $(MSMDE_OUTPUT)objects/$(appName)/
genSrc = $(o)
mdlapps = $(MS)Mdlapps/
#----------------------------------------------------------------------
# Create needed output directories if they don't exist
#----------------------------------------------------------------------
always:
!~@mkdir $(o)
!~@mkdir $(rscObjects)
!~@mkdir $(reqdObjs)
#----------------------------------------------------------------------
# Inlucde the Heaher files
#----------------------------------------------------------------------
dirToSearch = $(genSrc)
%include $(mdlMki)cincapnd.mki
dirToSearch = $(mdlInc)
%include $(mdlMki)cincapnd.mki

dirToSearch = $(baseDir)
%include $(mdlMki)cincapnd.mki
dirToSearch = $(MSMDE)mki/
%include cincapnd.mki
dirToSearch = $(MSMDE)include/
%include cincapnd.mki
#dirToSearch = $(MSMDE)include\DawsenSu
#%include cincapnd.mki

dirToSearch = $(mainSourceDir)
%include cincapnd.mki
#-----------------------------------------------------------------------
# Generate app res using rcomp
#-----------------------------------------------------------------------
$(rscObjects)$(appName).rsc : $(baseDir)$(appName).r
#-----------------------------------------------------------------------
# Generate commandTable and headerfile using rcomp
#-----------------------------------------------------------------------
$(baseDir)$(appName)cmd.h : $(baseDir)$(appName)cmd.r $(baseDir)$(appName)ids.h

$(rscObjects)$(appName)cmd.rsc : $(baseDir)$(appName)cmd.r $(baseDir)$(appName)ids.h

#----------------------------------------------------------------------
# Gernerate language resource file using rcomp
#----------------------------------------------------------------------
#$(rscObjects)$(appName)msg.rsc : $(langSpec)$(appName)msg.r #$(baseDir)$(appName)ids.h
#----------------------------------------------------------------------
# Gernerate application's type & resouce file using rsctype & rcomp
#----------------------------------------------------------------------
#$(rscObjects)$(appName)type.r : $(baseDir)$(appName)Type.mt #$(baseDir)$(appName)ids.h
#$(rscObjects)$(appName)type.rsc : $(rscObjects)$(appName)Type.r #$(baseDir)$(appName)ids.h
#----------------------------------------------------------------------
# Gernate all UI resouce
#----------------------------------------------------------------------
#$(rscObjects)$(appName)ui.rsc : $(baseDir)$(appName)ui.r $(langSpec)$(appName)txt.h $(baseDir)$(appName).h \
#$(baseDir)$(appName)cmd.h $(baseDir)$(appName)ids.h
#----------------------------------------------------------------------
# Define macros for files included in our link and resource merge
#----------------------------------------------------------------------
appRscs = $(rscObjects)$(appName).rsc $(rscObjects)$(appName)cmd.rsc \
#$(rscObjects)$(appName)type.rsc $(rscObjects)$(appName)msg.rsc $(rscObjects)$(appName)ui.rsc
#----------------------------------------------------------------------
# Set up to use linkLibrary.mki (legacy: dlmcomp.mki and dlmlink.mki)
#----------------------------------------------------------------------
DLM_NAME = $(appName)
DLM_DEST = $(mdlapps)
DLM_EXPORT_DEST = $(mdlapps)
DLM_OBJECT_FILES = $(MultiCompileObjectList)
DLM_OBJECT_DEST = $(o)
DLM_SPECIAL_LINKOPT = -fixed:no # Notify linker this library does not require a fixed base address to load
DLM_NO_DLS = 0 # USE DLLEXPORT IN .CPP
DLM_NO_DEF = 1
DLM_NOENTRY = 1
DLM_NO_MANIFEST = 1 # If not set linker embeds your current (developer) patched MSVCRT version manifest in output dll. This is not desirable and produces side-by-side CLIENT ERROR: 14001)
DLM_NO_SIGN = 1 # If not set and no certificate found, ERROR: 'singleton' is not recognized as an internal or external command
LINKER_LIBRARIES            + $(mdlLibs)3dModeling.lib
LINKER_LIBRARIES            + $(mdlLibs)animcore.lib
LINKER_LIBRARIES            + $(mdlLibs)BaseGeoCoord.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.GeoCoord.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.imodelconnection.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.imodelmessage.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.MicroStation.MaterialControl.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.PrintDefinitions.lib
LINKER_LIBRARIES            + $(mdlLibs)Bentley.PrintFoundation.lib
LINKER_LIBRARIES            + $(mdlLibs)BentleyAllocator.lib
LINKER_LIBRARIES            + $(mdlLibs)BentleyGeom.lib
LINKER_LIBRARIES            + $(mdlLibs)BentleyGeomSerialization.lib
LINKER_LIBRARIES            + $(mdlLibs)BeXml.lib
LINKER_LIBRARIES            + $(mdlLibs)Constraint2dCore.lib
LINKER_LIBRARIES            + $(mdlLibs)Constraint2dElement.lib
LINKER_LIBRARIES            + $(mdlLibs)Constraint3dCore.lib
LINKER_LIBRARIES            + $(mdlLibs)Constraint3dElement.lib
LINKER_LIBRARIES            + $(mdlLibs)dbpwise.lib
LINKER_LIBRARIES            + $(mdlLibs)DgnGeoCoord.lib
LINKER_LIBRARIES            + $(mdlLibs)DgnPlatform.lib
LINKER_LIBRARIES            + $(mdlLibs)DgnView.lib
LINKER_LIBRARIES            + $(mdlLibs)ECObjects.lib
LINKER_LIBRARIES            + $(mdlLibs)ImageLib.lib
LINKER_LIBRARIES            + $(mdlLibs)InsolationLib.lib
LINKER_LIBRARIES            + $(mdlLibs)mdlbltin.lib
LINKER_LIBRARIES            + $(mdlLibs)mdlxmltools.lib
LINKER_LIBRARIES            + $(mdlLibs)mspsolid.lib
LINKER_LIBRARIES            + $(mdlLibs)mstntoolsubs.lib
LINKER_LIBRARIES            + $(mdlLibs)nativewindow.lib
LINKER_LIBRARIES            + $(mdlLibs)nativewinmfc.lib
LINKER_LIBRARIES            + $(mdlLibs)PointCloud.lib
LINKER_LIBRARIES            + $(mdlLibs)PSolidAcisInterop.lib
LINKER_LIBRARIES            + $(mdlLibs)PSolidCore.lib
LINKER_LIBRARIES            + $(mdlLibs)Publish.lib
LINKER_LIBRARIES            + $(mdlLibs)RasterCore.lib
LINKER_LIBRARIES            + $(mdlLibs)rasterlib.lib
LINKER_LIBRARIES            + $(mdlLibs)RmgrTools.lib
LINKER_LIBRARIES            + $(mdlLibs)SmartFeature.lib
LINKER_LIBRARIES            + $(mdlLibs)splindlm.lib
LINKER_LIBRARIES            + $(mdlLibs)TerrainModelCore.lib
LINKER_LIBRARIES            + $(mdlLibs)TerrainModelElementHandler.lib
LINKER_LIBRARIES            + $(mdlLibs)videolib.lib
LINKER_LIBRARIES            + $(mdlLibs)VisEdgesLib.lib
#LINKER_LIBRARIES            + $(mdlLibs)\DawsenSu\rttr\rttr_core.lib
#LINKER_LIBRARIES            + $(mdlLibs)\DawsenSu\rttr\rttr_core_d.lib
#------------------------------------------------
# Compile the source files for the DLM
#------------------------------------------------
MultiCompileDepends = $(_MakeFileSpec)
%include MultiCppCompileRule.mki
$(o)$(appName)$(oext) : $(sourceDir)$(appName).cpp ${MultiCompileDepends} $(allDepends)

$(o)Components$(oext) : $(mainSourceDir)Components.cpp ${MultiCompileDepends} $(allDepends)

$(o)RailTool$(oext) : $(mainSourceDir)RailTool.cpp ${MultiCompileDepends} $(allDepends)

$(o)Common$(oext) : $(mainSourceDir)Common.cpp ${MultiCompileDepends} $(allDepends)

%include MultiCppCompileGo.mki
always:
!~@mkdir $(DLM_DEST)
%include $(mdlMki)dlmlink.mki
#----------------------------------------------------------------------
# Link the MA
#----------------------------------------------------------------------
MA_NAME = $(appName)
RIGHTSCOMPLIANT = false
MA_DEST = $(mdlApps)
MA_RSC_FILES = $(rscObjects)$(appName)cmd.rsc
MA_NO_VERSION = 1
MA_EXT = .ma
cmdFile = $(o)$(MA_NAME)link.cmd
#-----------------------------------------------------------------------
# Merge Objects into one file
#-----------------------------------------------------------------------
#$(reqdObjs)$(appName).mi : $(appRscs)
"$(MA_DEST)$(MA_NAME)$(MA_EXT)" : $(appRscs)
$(msg) 
>$(o)make.opt
-o$@
$(appRscs)
<
$(RLibCmd) @$(o)make.opt
~time
